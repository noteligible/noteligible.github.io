<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Noteligible&#39; Blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-06-19T08:40:20.943Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Noteligible</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>MyBatis</title>
    <link href="http://yoursite.com/2019/06/19/MyBatis/"/>
    <id>http://yoursite.com/2019/06/19/MyBatis/</id>
    <published>2019-06-19T01:24:45.000Z</published>
    <updated>2019-06-19T08:40:20.943Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
      <category term="Testing1" scheme="http://yoursite.com/categories/Testing1/"/>
    
    
      <category term="MyBatis" scheme="http://yoursite.com/tags/MyBatis/"/>
    
  </entry>
  
  <entry>
    <title>原生 JDBC 编程的问题总结</title>
    <link href="http://yoursite.com/2019/06/19/%E5%8E%9F%E7%94%9F%20JDBC%20%E7%BC%96%E7%A8%8B%E7%9A%84%E9%97%AE%E9%A2%98%E6%80%BB%E7%BB%93/"/>
    <id>http://yoursite.com/2019/06/19/原生 JDBC 编程的问题总结/</id>
    <published>2019-06-19T01:13:54.784Z</published>
    <updated>2019-06-19T16:16:18.017Z</updated>
    
    <content type="html"><![CDATA[<p>本文总结原生 JDBC 编程的一般步骤，总结其存在的问题，并附上典型 JDBC 示例。</p><h2 id="原生-JDBC-开发步骤"><a href="#原生-JDBC-开发步骤" class="headerlink" title="原生 JDBC 开发步骤"></a>原生 JDBC 开发步骤</h2><ol><li>加载数据库驱动</li><li>创建并获取数据库链接</li><li>创建 jdbc statement 对象</li><li>设置sql语句</li><li>设置sql语句中的参数（使用 preparedStatement）</li><li>通过 statement 执行 sql 并获取结果</li><li>对 sql 执行结果进行解析处理</li><li>释放资源（resultSet、preparedstatement、connection）</li></ol><h2 id="参考代码"><a href="#参考代码" class="headerlink" title="参考代码"></a>参考代码</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line">public class JdbcTest &#123;</span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        //数据库连接</span><br><span class="line">        Connection connection = null;</span><br><span class="line">        //预编译的Statement，使用预编译的Statement提高数据库性能</span><br><span class="line">        PreparedStatement preparedStatement = null;</span><br><span class="line">        //结果集</span><br><span class="line">        ResultSet resultSet = null;</span><br><span class="line"> </span><br><span class="line">        try &#123;</span><br><span class="line">            // 加载数据库驱动</span><br><span class="line">            Class.forName(&quot;com.mysql.cj.jdbc.Driver&quot;);</span><br><span class="line">            // 数据库连接地址</span><br><span class="line">            String URL = &quot;jdbc:mysql://localhost:3306/demo? serverTimezone=GMT &amp;useUnicode=true&amp; characterEncoding=utf8&quot;;</span><br><span class="line">            // 用户名</span><br><span class="line">            String USER = &quot;root&quot;;</span><br><span class="line">            // 密码</span><br><span class="line">            String PASSWORD = &quot;root&quot;;</span><br><span class="line">            // 通过驱动管理类获取数据库链接</span><br><span class="line">            Connection conn = DriverManager.getConnection(URL, USER, PASSWORD);            </span><br><span class="line">            // 定义sql语句，&quot;?&quot;表示占位符</span><br><span class="line">            String sql = &quot;select * from users where name = ?&quot;;</span><br><span class="line">            // 获取预处理 statement</span><br><span class="line">            preparedStatement = connection.prepareStatement(sql); </span><br><span class="line">            // 设置参数，第一个参数为sql语句中参数的序号（从1开始），第二个参数为设置的参数值</span><br><span class="line">            preparedStatement.setString(1, &quot;张三&quot;);</span><br><span class="line">            // 向数据库发出sql执行查询，查询出结果集</span><br><span class="line">            resultSet = preparedStatement.executeQuery(); </span><br><span class="line">            // 遍历查询结果集</span><br><span class="line">            while (resultSet.next()) &#123;</span><br><span class="line">                System.out.println(resultSet.getString(&quot;id&quot;) + &quot;  &quot; + resultSet.getString(&quot;name&quot;));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; catch (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; finally &#123;</span><br><span class="line">            // 释放资源</span><br><span class="line">            if (resultSet != null) &#123;</span><br><span class="line">                try &#123;</span><br><span class="line">                    resultSet.close();</span><br><span class="line">                &#125; catch (SQLException e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            if (preparedStatement != null) &#123;</span><br><span class="line">                try &#123;</span><br><span class="line">                    preparedStatement.close();</span><br><span class="line">                &#125; catch (SQLException e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            if (connection != null) &#123;</span><br><span class="line">                try &#123;</span><br><span class="line">                    connection.close();</span><br><span class="line">                &#125; catch (SQLException e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="问题总结"><a href="#问题总结" class="headerlink" title="问题总结"></a>问题总结</h2><ol><li><p>数据库连接时，使用时就创建，不使用时就立即释放，对数据库进行频繁地连接和释放，造成数据库资源浪费，从而影响数据库性能。</p><p>解决方法：使用数据库连接池管理数据库连接。</p></li><li><p>将 sql 语句写在 Java 代码中，存在硬编码，如果 sql 语句修改，则需要重新编译 Java 代码，不利于系统维护。</p><p>解决方法：将 sql 语句配置在 xml 配置文件中。</p></li><li><p>使用 preparedStatement 中向占位符号传参数值时，Java 代码中存在硬编码，不利于系统维护。</p><p>解决方法：将 sql 语句及占位符号和参数全部配置在 xml 配置文件中。</p></li><li><p>对结果集解析麻烦，sql 变化导致解析代码变化，且解析前需要遍历，存在硬编码，不利于系统维护。</p><p>将查询的结果集，自动映射成 Java 对象。</p></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;本文总结原生 JDBC 编程的一般步骤，总结其存在的问题，并附上典型 JDBC 示例。&lt;/p&gt;
&lt;h2 id=&quot;原生-JDBC-开发步骤&quot;&gt;&lt;a href=&quot;#原生-JDBC-开发步骤&quot; class=&quot;headerlink&quot; title=&quot;原生 JDBC 开发步骤&quot;&gt;&lt;/a
      
    
    </summary>
    
      <category term="Web开发" scheme="http://yoursite.com/categories/Web%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="MyBatis" scheme="http://yoursite.com/tags/MyBatis/"/>
    
      <category term="JDBC" scheme="http://yoursite.com/tags/JDBC/"/>
    
  </entry>
  
</feed>
