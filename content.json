{"meta":{"title":"Noteligible' Blog","subtitle":null,"description":"��Զ��Ҫ����","author":"Noteligible","url":"http://yoursite.com","root":"/"},"pages":[{"title":"about","date":"2019-06-19T01:49:00.000Z","updated":"2019-06-19T01:49:00.970Z","comments":true,"path":"about/index.html","permalink":"http://yoursite.com/about/index.html","excerpt":"","text":""},{"title":"categories","date":"2019-06-19T01:49:28.000Z","updated":"2019-06-19T07:57:33.092Z","comments":false,"path":"categories/index.html","permalink":"http://yoursite.com/categories/index.html","excerpt":"","text":""},{"title":"tags","date":"2019-06-19T01:49:16.000Z","updated":"2019-06-19T08:30:29.290Z","comments":false,"path":"tags/index.html","permalink":"http://yoursite.com/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"MyBatis","slug":"MyBatis","date":"2019-06-19T01:24:45.000Z","updated":"2019-06-19T08:40:20.943Z","comments":true,"path":"2019/06/19/MyBatis/","link":"","permalink":"http://yoursite.com/2019/06/19/MyBatis/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub.","categories":[{"name":"Testing1","slug":"Testing1","permalink":"http://yoursite.com/categories/Testing1/"}],"tags":[{"name":"MyBatis","slug":"MyBatis","permalink":"http://yoursite.com/tags/MyBatis/"}]},{"title":"原生 JDBC 编程的问题总结","slug":"原生 JDBC 编程的问题总结","date":"2019-06-19T01:13:54.784Z","updated":"2019-06-19T16:16:18.017Z","comments":true,"path":"2019/06/19/原生 JDBC 编程的问题总结/","link":"","permalink":"http://yoursite.com/2019/06/19/原生 JDBC 编程的问题总结/","excerpt":"","text":"本文总结原生 JDBC 编程的一般步骤，总结其存在的问题，并附上典型 JDBC 示例。 原生 JDBC 开发步骤 加载数据库驱动 创建并获取数据库链接 创建 jdbc statement 对象 设置sql语句 设置sql语句中的参数（使用 preparedStatement） 通过 statement 执行 sql 并获取结果 对 sql 执行结果进行解析处理 释放资源（resultSet、preparedstatement、connection） 参考代码123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960public class JdbcTest &#123; public static void main(String[] args) &#123; //数据库连接 Connection connection = null; //预编译的Statement，使用预编译的Statement提高数据库性能 PreparedStatement preparedStatement = null; //结果集 ResultSet resultSet = null; try &#123; // 加载数据库驱动 Class.forName(&quot;com.mysql.cj.jdbc.Driver&quot;); // 数据库连接地址 String URL = &quot;jdbc:mysql://localhost:3306/demo? serverTimezone=GMT &amp;useUnicode=true&amp; characterEncoding=utf8&quot;; // 用户名 String USER = &quot;root&quot;; // 密码 String PASSWORD = &quot;root&quot;; // 通过驱动管理类获取数据库链接 Connection conn = DriverManager.getConnection(URL, USER, PASSWORD); // 定义sql语句，&quot;?&quot;表示占位符 String sql = &quot;select * from users where name = ?&quot;; // 获取预处理 statement preparedStatement = connection.prepareStatement(sql); // 设置参数，第一个参数为sql语句中参数的序号（从1开始），第二个参数为设置的参数值 preparedStatement.setString(1, &quot;张三&quot;); // 向数据库发出sql执行查询，查询出结果集 resultSet = preparedStatement.executeQuery(); // 遍历查询结果集 while (resultSet.next()) &#123; System.out.println(resultSet.getString(&quot;id&quot;) + &quot; &quot; + resultSet.getString(&quot;name&quot;)); &#125; &#125; catch (Exception e) &#123; e.printStackTrace(); &#125; finally &#123; // 释放资源 if (resultSet != null) &#123; try &#123; resultSet.close(); &#125; catch (SQLException e) &#123; e.printStackTrace(); &#125; &#125; if (preparedStatement != null) &#123; try &#123; preparedStatement.close(); &#125; catch (SQLException e) &#123; e.printStackTrace(); &#125; &#125; if (connection != null) &#123; try &#123; connection.close(); &#125; catch (SQLException e) &#123; e.printStackTrace(); &#125; &#125; &#125; &#125;&#125; 问题总结 数据库连接时，使用时就创建，不使用时就立即释放，对数据库进行频繁地连接和释放，造成数据库资源浪费，从而影响数据库性能。 解决方法：使用数据库连接池管理数据库连接。 将 sql 语句写在 Java 代码中，存在硬编码，如果 sql 语句修改，则需要重新编译 Java 代码，不利于系统维护。 解决方法：将 sql 语句配置在 xml 配置文件中。 使用 preparedStatement 中向占位符号传参数值时，Java 代码中存在硬编码，不利于系统维护。 解决方法：将 sql 语句及占位符号和参数全部配置在 xml 配置文件中。 对结果集解析麻烦，sql 变化导致解析代码变化，且解析前需要遍历，存在硬编码，不利于系统维护。 将查询的结果集，自动映射成 Java 对象。","categories":[{"name":"Web开发","slug":"Web开发","permalink":"http://yoursite.com/categories/Web开发/"}],"tags":[{"name":"MyBatis","slug":"MyBatis","permalink":"http://yoursite.com/tags/MyBatis/"},{"name":"JDBC","slug":"JDBC","permalink":"http://yoursite.com/tags/JDBC/"}]}]}